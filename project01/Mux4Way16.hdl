// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];


    PARTS:
    Xor(a=sel[0],b=sel[1],out=isSameDigits); // 1 if they arent the same
    Mux16(a=a,b=d,sel=sel[0],out=sameDigits); 

    //imagine we check the rightmost digit first
    //whatever we recieve will be flipped, as they aren't the same digits
    //therefore checking the first is redundant
    Mux16(a=b,b=c,sel=sel[1],out=notSameDigits); 

    Mux16(a=sameDigits,b=notSameDigits,sel=isSameDigits,out=out);
}

